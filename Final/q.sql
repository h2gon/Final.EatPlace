--���� ���̺�(����Ʈ���� ����ϴ� ��)

CREATE TABLE EAT_RESTAURANT(
	SEQ NUMBER PRIMARY KEY,
	RS_NAME VARCHAR2(100) UNIQUE,
	RS_ADDRESS1 VARCHAR2(200) NOT NULL,
	RS_ADDRESS2 VARCHAR2(100) NOT NULL,
	RS_PICTURE VARCHAR2(100) NOT NULL,
	RS_CATEGORY VARCHAR2(100) NOT NULL,
	RS_MENU VARCHAR2(4000) NOT NULL,
	RS_RATING NUMBER NOT NULL,
	RS_READCOUNT NUMBER NOT NULL
	
);

alter table eat_restaurant add (rs_keyword varchar2(4000));

alter table eat_restaurant modify (rs_menu varchar2(4000));

select * from eat_restaurant
select * from restaurant_review

select count(*) from RESTAURANT_REVIEW where rs_seq=23
SELECT COUNT (*) FROM RESTAURANT_LIKES where RS_SEQ=23
select * from restaurant_review where rs_seq=23

--���� ����
CREATE TABLE RESTAURANT_INFO(
	RS_NAME VARCHAR2(100) NOT NULL, --���� �̸�
	RS_SEQ NUMBER NOT NULL, --���� ��ȣ
	RS_TIME VARCHAR2(100), --�����ð�
	RS_PHONE VARCHAR2(100), --��ȭ��ȣ
	RS_PRICE VARCHAR2(100), --���ݴ�
	RS_PARKING NUMBER --���� ����

);

ALTER TABLE RESTAURANT_INFO --���� �̸��� �ܷ�Ű�� �Ѱܹ���
   ADD CONSTRAINT INFO_NAME_FK 
   FOREIGN KEY (RS_NAME) REFERENCES EAT_RESTAURANT (RS_NAME) ON DELETE CASCADE
   
ALTER TABLE RESTAURANT_INFO --������ ��ȣ�� �ܷ�Ű�� �Ѱܹ���
   ADD CONSTRAINT INFO_NUMBER_FK
   FOREIGN KEY (RS_SEQ) REFERENCES EAT_RESTAURANT (SEQ) ON DELETE CASCADE
   
   
--���� ���� ���̺�
CREATE TABLE RESTAURANT_REVIEW(
	SEQ NUMBER PRIMARY KEY,
	ID VARCHAR2(100) NOT NULL,
	RS_SEQ NUMBER NOT NULL,
	RS_CONTENT CLOB NOT NULL,
	RS_RATING NUMBER NOT NULL
);
CREATE SEQUENCE REIVEW_SEQ
   START WITH 1 INCREMENT BY 1
   
ALTER TABLE RESTAURANT_REVIEW --��� ID �ܷ�Ű�� �Ѱܹ���
   ADD CONSTRAINT REVIEW_ID_FK
   FOREIGN KEY (ID) REFERENCES EATMEMBER (ID) ON DELETE CASCADE
   
ALTER TABLE RESTAURANT_REVIEW
   ADD CONSTRAINT REVIEW_SEQ_FK
   FOREIGN KEY (RS_SEQ) REFERENCES EAT_RESTAURANT (SEQ) ON DELETE CASCADE
   
drop table restaurant_review
cascade constraints
drop sequence REIVEW_SEQ
--����ʹ� ���̺�
CREATE TABLE RESTAURANT_LIKES(
	SEQ NUMBER PRIMARY KEY,
	ID VARCHAR2(100) NOT NULL,
	RS_SEQ NUMBER NOT NULL,
	RS_NAME VARCHAR2(100) NOT NULL

);

CREATE SEQUENCE LIKES_SEQ
	START WITH 1 INCREMENT BY 1;
	
ALTER TABLE RESTAURANT_LIKES --��� ID �ܷ�Ű�� �Ѱܹ���
   ADD CONSTRAINT LIKES_ID_FK
   FOREIGN KEY (ID) REFERENCES EATMEMBER (ID) ON DELETE CASCADE
   
ALTER TABLE RESTAURANT_LIKES
   ADD CONSTRAINT LIKES_SEQ_FK--���� ��ȣ �ܷ�Ű�� �Ѱܹ���
   FOREIGN KEY (SEQ) REFERENCES EAT_RESTAURANT (SEQ) ON DELETE CASCADE
   
CREATE TABLE RS_FILE (
	SEQ NUMBER NOT NULL,
	O_NAME VARCHAR2(100) NOT NULL,
	FILE_NAME VARCHAR2(100) NOT NULL,
	FILE_SIZE NUMBER NOT NULL,
	RV_SEQ NUMBER NOT NULL,
	RS_SEQ NUMBER NOT NULL
);

-- 식당 DETAIL위의 네비게이션에 출력해줄 이미지를 위해서는 리뷰별 출력이 아니라 파일 테이블에서 식당번호로 뽑아 출력하는게 낫다고 생각.
-- 리뷰 별 출력: 리뷰를 하나 불러오면 그 리뷰 시퀀스에 맞는 사진이 이미 불러진 상태고, 이것을 뿌려주면 되기 때문.

ALTER TABLE RS_FILE
	ADD CONSTRAINT FILE_RSSEQ_FK
	FOREIGN KEY (RS_SEQ) REFERENCES EAT_RESTAURANT(SEQ)

ALTER TABLE RS_FILE
	ADD CONSTRAINT FILE_RVSEQ_FK
	FOREIGN KEY (RV_SEQ) REFERENCES RESTAURANT_REVIEW(SEQ)

CREATE SEQUENCE RSFILE_SEQ
START WITH 1
INCREMENT BY 1;

select * from FILE_TABLE


--검색 + 페이징 + 다중테이블 + UNION

SELECT RNUM,SEQ
FROM(
SELECT ROWNUM AS RNUM, SEQ
FROM(SELECT SEQ
FROM EAT_RESTAURANT	 
WHERE (RS_NAME || RS_ADDRESS1 || RS_ADDRESS2 || RS_MENU || RS_KEYWORD) LIKE '%두부%'
UNION
SELECT RS_SEQ AS SEQ
FROM RESTAURANT_REVIEW 
WHERE RS_CONTENT LIKE '%두부%'))
WHERE RNUM BETWEEN 1 AND 10



